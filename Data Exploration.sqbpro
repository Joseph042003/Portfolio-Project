/*
Covid 19 Data Exploration 

Skills used: Joins, CTE's, Temp Tables, Windows Functions, Aggregate Functions, Creating Views, Correcting Data Types

Files Used: CovidDeath_Official, CovidVaccination
*/

-- Creating a second table, having 'Date' column with the correct data type

DROP TABLE IF EXISTS CovidDeaths1;
CREATE TABLE "CovidDeaths1" (
	"iso_code"	TEXT,
	"continent"	TEXT,
	"location"	TEXT,
	"date"	DATE,
	"population"	INTEGER,
	"total_cases"	REAL,
	"new_cases"	INTEGER,
	"new_cases_smoothed"	TEXT,
	"total_deaths"	REAL,
	"new_deaths"	TEXT,
	"new_deaths_smoothed"	TEXT,
	"total_cases_per_million"	REAL,
	"new_cases_per_million"	INTEGER,
	"new_cases_smoothed_per_million"	TEXT,
	"total_deaths_per_million"	TEXT,
	"new_deaths_per_million"	TEXT,
	"new_deaths_smoothed_per_million"	TEXT,
	"reproduction_rate"	TEXT,
	"icu_patients"	TEXT,
	"icu_patients_per_million"	TEXT,
	"hosp_patients"	TEXT,
	"hosp_patients_per_million"	TEXT,
	"weekly_icu_admissions"	TEXT,
	"weekly_icu_admissions_per_million"	TEXT,
	"weekly_hosp_admissions"	TEXT,
	"weekly_hosp_admissions_per_million" TEXT
	);

-- Inserting data from the orginial table to the new table, altering date format

INSERT INTO CovidDeaths1
SELECT iso_code	, continent	,
	"location"	,
	date(substr(date, 7, 4) || '-' || substr(date, 4, 2) || '-' || substr(date, 1, 2)),
	population,
	total_cases,
	new_cases,
	new_cases_smoothed,
	total_deaths,
	new_deaths,
	new_deaths_smoothed,
	total_cases_per_million,
	new_cases_per_million,
	new_cases_smoothed_per_million,
	total_deaths_per_million,
	new_deaths_per_million,
	new_deaths_smoothed_per_million,
	reproduction_rate,
	icu_patients,
	icu_patients_per_million,
	hosp_patients,
	hosp_patients_per_million,
	weekly_icu_admissions,
    weekly_icu_admissions_per_million,
	weekly_hosp_admissions,
	weekly_hosp_admissions_per_million
FROM CovidDeaths;	

-- Creating a second table, having 'Date' column with the correct data type

DROP TABLE IF EXISTS CovidVaccinations1;
CREATE TABLE "CovidVaccinations1" (
	"iso_code"	TEXT,
	"continent"	TEXT,
	"location"	TEXT,
	"date"	DATE,
	"new_tests"	REAL,
	"total_tests"	REAL,
	"total_tests_per_thousand"	REAL,
	"new_tests_per_thousand"	REAL,
	"new_tests_smoothed"	TEXT,
	"new_tests_smoothed_per_thousand"	TEXT,
	"positive_rate"	TEXT,
	"tests_per_case"	TEXT,
	"tests_units"	TEXT,
	"total_vaccinations"	REAL,
	"people_vaccinated"	REAL,
	"people_fully_vaccinated"	REAL,
	"new_vaccinations"	INTEGER,
	"new_vaccinations_smoothed"	TEXT,
	"total_vaccinations_per_hundred"	TEXT,
	"people_vaccinated_per_hundred"	TEXT,
	"people_fully_vaccinated_per_hundred"	TEXT,
	"new_vaccinations_smoothed_per_million"	TEXT,
	"stringency_index"	REAL,
	"population_density"	REAL,
	"median_age"	REAL,
	"aged_65_older"	REAL,
	"aged_70_older"	REAL,
	"gdp_per_capita"	REAL,
	"extreme_poverty"	TEXT,
	"cardiovasc_death_rate"	REAL,
	"diabetes_prevalence"	REAL,
	"female_smokers"	TEXT,
	"male_smokers"	TEXT,
	"handwashing_facilities"	REAL,
	"hospital_beds_per_thousand"	REAL,
	"life_expectancy"	REAL,
	"human_development_index"	REAL
 );

 -- Inserting data from the orginial table to the new table, altering date format
 
INSERT INTO CovidVaccinations1
SELECT iso_code,
	continent,
	location,
	date(substr(date, 7, 4) || '-' || substr(date, 4, 2) || '-' || substr(date, 1, 2)),
	new_tests,
	total_tests,
	total_tests_per_thousand,
	new_tests_per_thousand,
	new_tests_smoothed,
	new_tests_smoothed_per_thousand,
	positive_rate,
	tests_per_case,
	tests_units,
	total_vaccinations,
	people_vaccinated,
	people_fully_vaccinated,
	new_vaccinations,
	new_vaccinations_smoothed,
	total_vaccinations_per_hundred,
	people_vaccinated_per_hundred,
	people_fully_vaccinated_per_hundred,
	new_vaccinations_smoothed_per_million,
	stringency_index,
	population_density,
	median_age,
	aged_65_older,
	aged_70_older,
	gdp_per_capita,
	extreme_poverty,
	cardiovasc_death_rate,
	diabetes_prevalence,
	female_smokers,
	male_smokers,
	handwashing_facilities,
	hospital_beds_per_thousand,
	life_expectancy,
	human_development_index
FROM CovidVaccinations;

--  Data that wil be used for exploration

SELECT location, date, total_cases, new_cases, total_deaths, population
FROM CovidDeaths1
WHERE continent IS NOT NULL
ORDER BY 1,2;

-- Total Cases vs Total Deaths
-- Shows likelihood of dying if you contract covid in your country

SELECT Location, date, total_cases,total_deaths, ROUND((total_deaths/total_cases)*100,2) as DeathPercentage
FROM CovidDeaths1
WHERE location LIKE '%states%' AND continent IS NOT NULL
ORDER BY 1,2;


-- Total Cases vs Population
-- Shows what percentage of population infected with Covid

SELECT location, date, population, total_cases,  ROUND((total_cases/population)*100,2) as PercentPopulationInfected
FROM CovidDeaths1
ORDER BY 1,2;


-- Countries with Highest Infection Rate compared to Population

SELECT location, population, MAX(total_cases) as HighestInfectionCount,  MAX((total_cases/population))*100 as PercentPopulationInfected
FROM CovidDeaths1
GROUP BY location, population
ORDER BY PercentPopulationInfected DESC;


-- Countries with Highest Death Count per Population

SELECT location, MAX(total_deaths) as TotalDeathCount
FROM CovidDeaths1
WHERE continent IS NOT NULL
GROUP BY Location
ORDER BY TotalDeathCount DESC;


-- BREAKING THINGS DOWN BY CONTINENT

-- Showing contintents with the highest death count per population

SELECT continent, MAX(Total_deaths) as TotalDeathCount
FROM CovidDeaths1
WHERE continent IS NOT NULL 
Group by continent
ORDER BY TotalDeathCount DESC;


-- GLOBAL NUMBERS

SELECT date, SUM(new_cases) as total_cases, SUM(new_deaths) as total_deaths, ROUND(SUM(new_deaths)/SUM(new_cases)*100,6) as DeathPercentage
FROM CovidDeaths1
WHERE continent IS NOT NULL
Group BY date
ORDER BY 1,2;


-- Total Population vs Vaccinations
-- Shows Percentage of Population that has recieved at least one Covid Vaccine

-- USING CTE
WITH PopvsVac(continent, location, date, population, new_vaccination, RollingPeopleVaccinated) AS
(
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations,
		SUM(vac.new_vaccinations) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) as RollingPeopleVaccinated
 -- , (RollingPeopleVaccinated/population)*100
FROM CovidDeaths1 dea
INNER JOIN CovidVaccinations1 vac
	ON dea.location = vac.location
	AND dea.date = vac.date
WHERE dea.continent IS NOT NULL
ORDER BY 2,3
)
SELECT * , (RollingPeopleVaccinated /population)*100 as '%Population_Vaccinated ' 
FROM PopvsVac;

-- USING TEMPORARY TABLE 
DROP TABLE IF EXISTS PercentPopulationVaccinated;
CREATE TEMPORARY TABLE PercentPopulationVaccinated
(
	continent TEXT,
	location TEXT, 
	date DATE,
	population NUMERIC,
	new_vaccinations NUMERIC,
	rollingPeopleVaccinated NUMERIC
);
INSERT INTO PercentPopulationVaccinated
	SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations,
			SUM(vac.new_vaccinations) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) as RollingPeopleVaccinated
	 -- , (RollingPeopleVaccinated/population)*100
	FROM CovidDeaths1 dea
	INNER JOIN CovidVaccinations1 vac
		ON dea.location = vac.location
		AND dea.date = vac.date
	WHERE dea.continent IS NOT NULL;
	
SELECT * , (rollingPeopleVaccinated /population)*100 as '%Population_Vaccinated ' 
FROM PercentPopulationVaccinated;


-- CREATING VIEW for Later Visualisation

CREATE VIEW PercentPopulationVaccinated AS 
	SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations,
		SUM(vac.new_vaccinations) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) as RollingPeopleVaccinated
	 -- , (RollingPeopleVaccinated/population)*100
	FROM CovidDeaths1 dea
	INNER JOIN CovidVaccinations1 vac
		ON dea.location = vac.location
		AND dea.date = vac.date
	WHERE dea.continent IS NOT NULL
	
